{"version":3,"sources":["app/google.maps.Polygon.moveTo.js","app/initialize.js","app/map_util.js","app/models/polygon.js","app/models/territory.js","app/views/map_view.js","app/views/search_view.js","app/views/territory_view.js"],"names":["window","initMoveTo","google","maps","Polygon","prototype","getBounds","latLng","bounds","LatLngBounds","paths","getPaths","path","p","getLength","getAt","i","extend","moveTo","boundsCenter","getCenter","newPoints","newPaths","geodesic","push","length","heading","geometry","spherical","computeHeading","distance","computeDistanceBetween","j","jl","shapeCoords","relativePoint","k","kl","computeOffset","latlngToPoint","map","latlng","normalizedPoint","getProjection","fromLatLngToPoint","scale","Math","pow","getZoom","pixelCoordinate","Point","x","y","pointToLatlng","point","fromPointToLatLng","boundsCenterPx","latLngPx","dLatPx","dLngPx","pixels","setPaths","document","addEventListener","searchView","SearchView","territoryView","TerritoryView","mapView","MapView","$","keydown","evt","which","cmdPressed","keyup","gmapifyPoints","points","LatLng","gmapifyPolygons","polygons","poly","c","gon","innerCoords","len","outerCoords","purgeLonePoints","coords","territory","originalCoords","originalCenter","center","e","gmapPolygon","getArray","movePolygons","createGmapPolygon","event","addListener","dragStart","bind","dragEnd","clearInstanceListeners","setMap","accumulatedLatDiff","accumulatedLngDiff","removeFromMap","addToMap","forEach","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","draggable","latDiff","lngDiff","lat","lng","move","Territory","attrs","Object","assign","id","getId","type","abbrev","terse","join","reset","remove","polygon","name","state","toUpperCase","country","polygon_center","map_center","root","url","getURL","getJSON","success","resp","addTerritory","error","err","allTerritories","t","territories","bringtoCenter","setCenter","zoom","setZoom","addPolygons","ele","dropdownMenu","find","input","on","onInput","onKeydown","onFocus","clickDropdownItem","places","countries","filter","states","cities","click","target","closest","removeClass","classList","add","val","setTimeout","closeDropdown","findById","getAttribute","fetchPoints","addItem","currentTarget","addClass","value","openDropdown","dir","active","children","index","last","first","item","moveSelection","goDown","goUp","hitEnter","hitEsc","matches","findMatches","innerHTML","renderDropdownHtml","html","friendlyName","badgeClass","query","RegExp","replace","some","thing","things","test","territoryDiv","clickTerritory","preventDefault","attr","hasClass","resetTerritory","gotoTerritory","dropdown","removeTerritory","renderTerritory","append"],"mappings":"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","file":"public/app.js","sourcesContent":["window.initMoveTo = function() {\n/**\n * Polygon getBounds extension - google-maps-extensions\n * @see http://code.google.com/p/google-maps-extensions/source/browse/google.maps.Polygon.getBounds.js\n */\nif (!google.maps.Polygon.prototype.getBounds) {\n\tgoogle.maps.Polygon.prototype.getBounds = function(latLng) {\n\t\tvar bounds = new google.maps.LatLngBounds();\n\t\tvar paths = this.getPaths();\n\t\tvar path;\n\n\t\tfor (var p = 0; p < paths.getLength(); p++) {\n\t\t\tlet path = paths.getAt(p);\n\t\t\tfor (var i = 0; i < path.getLength(); i++) {\n\t\t\t\tbounds.extend(path.getAt(i));\n\t\t\t}\n\t\t}\n\n\t\treturn bounds;\n\t};\n}\n\n/**\n * google.maps.Polygon.moveTo() — Move a Polygon on Google Maps V3 to a new LatLng()\n * Built by Bramus! - http://www.bram.us/\n *\n * @requires  google.maps.Polygon.getBounds\n * @requires  google.maps.geometry\n */\nif (!google.maps.Polygon.prototype.moveTo) {\n\tgoogle.maps.Polygon.prototype.moveTo = function(latLng) {\n\n\t\t// our vars\n\t\tvar boundsCenter = this.getBounds().getCenter(), // center of the polygonbounds\n\t\t\tpaths = this.getPaths(), // paths that make up the polygon\n\t\t\tnewPoints =[], // array on which we'll store our new points\n\t\t\tnewPaths = []; // array containing the new paths that make up the polygon\n\n\t\t// geodesic enabled: we need to recalculate every point relatively\n\t\tif (this.geodesic) {\n\n\t\t\t// loop all the points of the original path and calculate the bearing + distance of that point relative to the center of the shape\n\t\t\tfor (var p = 0; p < paths.getLength(); p++) {\n\t\t\t\tlet path = paths.getAt(p);\n\t\t\t\tnewPoints.push([]);\n\n\t\t\t\tfor (var i = 0; i < path.getLength(); i++) {\n\t\t\t\t\tnewPoints[newPoints.length-1].push({\n\t\t\t\t\t\theading: google.maps.geometry.spherical.computeHeading(boundsCenter, path.getAt(i)),\n\t\t\t\t\t\tdistance: google.maps.geometry.spherical.computeDistanceBetween(boundsCenter, path.getAt(i))\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// now that we have the \"relative\" points, rebuild the shapes on the new location around the new center\n\t\t\tfor (var j = 0, jl = newPoints.length; j < jl; j++) {\n\t\t\t\tvar shapeCoords = [],\n\t\t\t\t\trelativePoint = newPoints[j];\n\t\t\t\tfor (var k = 0, kl = relativePoint.length; k < kl; k++) {\n\t\t\t\t\tshapeCoords.push(google.maps.geometry.spherical.computeOffset(\n\t\t\t\t\t\tlatLng,\n\t\t\t\t\t\trelativePoint[k].distance,\n\t\t\t\t\t\trelativePoint[k].heading\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t\tnewPaths.push(shapeCoords);\n\t\t\t}\n\n\t\t}\n\n\t\t// geodesic not enabled: adjust the coordinates pixelwise\n\t\telse {\n\t\t\tvar latlngToPoint = function(map, latlng){\n\t\t\t\tvar normalizedPoint = map.getProjection().fromLatLngToPoint(latlng); // returns x,y normalized to 0~255\n\t\t\t\tvar scale = Math.pow(2, map.getZoom());\n\t\t\t\tvar pixelCoordinate = new google.maps.Point(normalizedPoint.x * scale, normalizedPoint.y * scale);\n\t\t\t\treturn pixelCoordinate; \n\t\t\t};\n\n\t\t\tvar pointToLatlng = function(map, point){\n\t\t\t\tvar scale = Math.pow(2, map.getZoom());\n\t\t\t\tvar normalizedPoint = new google.maps.Point(point.x / scale, point.y / scale);\n\t\t\t\tvar latlng = map.getProjection().fromPointToLatLng(normalizedPoint);\n\t\t\t\treturn latlng;\n\t\t\t};\n\n\t\t\t// calc the pixel position of the bounds and the new latLng\n\t\t\tvar boundsCenterPx = latlngToPoint(this.map, boundsCenter),\n\t\t\t\tlatLngPx = latlngToPoint(this.map, latLng);\n\n\t\t\t// calc the pixel difference between the bounds and the new latLng\n\t\t\tvar dLatPx = (boundsCenterPx.y - latLngPx.y) * (-1),\n\t\t\t\tdLngPx = (boundsCenterPx.x - latLngPx.x) * (-1);\n\n\t\t\t// adjust all paths\n\t\t\tfor (var p = 0; p < paths.getLength(); p++) {\n\t\t\t\tlet path = paths.getAt(p);\n\t\t\t\tnewPaths.push([]);\n\t\t\t\tfor (var i = 0; i < path.getLength(); i++) {\n\t\t\t\t\tvar pixels = latlngToPoint(this.map, path.getAt(i));\n\t\t\t\t\tpixels.x += dLngPx;\n\t\t\t\t\tpixels.y += dLatPx;\n\t\t\t\t\tnewPaths[newPaths.length-1].push(pointToLatlng(this.map, pixels));\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\n\t\t// Update the path of the Polygon to the new path\n\t\tthis.setPaths(newPaths);\n\n\t\t// Return the polygon itself so we can chain\n\t\treturn this;\n\n\t};\n}\n}\n","import Territory from 'models/territory.js';\nimport SearchView from 'views/search_view.js';\nimport TerritoryView from 'views/territory_view.js';\nimport MapView from 'views/map_view.js';\nimport 'google.maps.Polygon.moveTo.js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // do your setup here\n  // console.log('Initialized app');\n\n  window.searchView = new SearchView;\n  window.territoryView = new TerritoryView;\n  window.mapView = new MapView;\n});\n\n$(window).keydown(function(evt) {\n  if (evt.which == 91) { // cmd\n    window.cmdPressed = true;\n  }\n}).keyup(function(evt) {\n  if (evt.which == 91) { // cmd\n    window.cmdPressed = false;\n  }\n});\n","import reject from 'lodash/reject';\nimport map from 'lodash/map';\n\nvar gmapifyPoints = function(points) {\n  return map(points, function(point) {\n    return new google.maps.LatLng(point[1], point[0]);\n  });\n};\n\nexport const gmapifyPolygons = function(polygons) {\n  return map(polygons, function(poly) {\n    var c, gon, i, innerCoords, len, outerCoords;\n    gon = [];\n    outerCoords = gmapifyPoints(purgeLonePoints(poly.outerCoords));\n    innerCoords = map(poly.innerCoords, function(coords) {\n      return gmapifyPoints(purgeLonePoints(coords));\n    });\n    gon.push(outerCoords);\n    for (i = 0, len = innerCoords.length; i < len; i++) {\n      c = innerCoords[i];\n      gon.push(c);\n    }\n    return gon;\n  });\n};\n\nvar purgeLonePoints = function(coords) {\n  return reject(coords, function(point) {\n    return point.length < 2;\n  });\n};\n","import map from 'lodash/map';\nimport reject from 'lodash/reject';\n\nclass Polygon {\n  constructor(coords, territory) {\n    this.territory = territory;\n    this.originalCoords = this.coords = coords;\n    this.originalCenter = this.center = this.getCenter()\n  }\n\n  dragStart(e) {\n  }\n\n  dragEnd(e) {\n    this.coords = this.gmapPolygon.getPaths().getArray().map(c => c.getArray().map(j => j))\n\n    this.center = this.getCenter()\n\n    if (window.cmdPressed) {\n      this.movePolygons();\n    }\n  }\n\n  addToMap() {\n    this.createGmapPolygon();\n\n    google.maps.event.addListener(this.gmapPolygon, 'dragstart', this.dragStart.bind(this));\n    google.maps.event.addListener(this.gmapPolygon, 'dragend', this.dragEnd.bind(this));\n  }\n\n  removeFromMap() {\n    google.maps.event.clearInstanceListeners(this.gmapPolygon);\n    this.gmapPolygon.setMap(null);\n  }\n\n  reset() {\n    this.accumulatedLatDiff = 0\n    this.accumulatedLngDiff = 0\n    this.coords = this.originalCoords\n    this.removeFromMap()\n    this.addToMap()\n  }\n\n  remove() {\n    this.removeFromMap();\n    //this.territory.polygons = reject(this.territory.polygons, p => p === this);\n  }\n\n  getCenter() {\n    let bounds = new google.maps.LatLngBounds()\n    let points = this.coords[0]\n\n    points.forEach((p) => {\n      bounds.extend(p)\n    })\n\n    return bounds.getCenter()\n  }\n\n  createGmapPolygon() {\n    this.gmapPolygon = new google.maps.Polygon({\n      map: window.map,\n      paths: this.coords,\n      strokeColor: \"#FF0000\",\n      strokeOpacity: 0.8,\n      strokeWeight: 1,\n      fillColor: \"#FF0000\",\n      fillOpacity: 0.35,\n      draggable: true,\n      geodesic: true\n    })\n  }\n\n  move(latDiff, lngDiff) {\n    let lat = this.originalCenter.lat() + latDiff;\n    let lng = this.originalCenter.lng() + lngDiff;\n    this.gmapPolygon.moveTo(new google.maps.LatLng(lat, lng));\n  }\n\n  movePolygons() {\n    let latDiff = this.center.lat() - this.originalCenter.lat()\n    let lngDiff = this.center.lng() - this.originalCenter.lng()\n    this.territory.polygons.forEach((p) => {\n      if (p === this) return\n\n      p.move(latDiff, lngDiff)\n    })\n  }\n}\n\nexport default Polygon;\n","import find from 'lodash/find';\nimport map from 'lodash/map';\nimport Polygon from 'models/polygon.js';\n\nimport {gmapifyPolygons} from './../map_util.js';\n\nclass Territory {\n  constructor(attrs) {\n    this.polygons = [];\n\n    Object.assign(this, attrs);\n    this.id = this.getId()\n  }\n\n  getId() {\n    return [this.type, this.abbrev || this.terse].join('-')\n  }\n\n  reset() {\n    this.polygons.forEach(p => p.reset())\n  }\n\n  remove() {\n    this.polygons.forEach(p => p.remove())\n  }\n\n  addPolygon(polygon) {\n    this.polygons.push(polygon)\n  }\n\n  friendlyName() {\n    let name = this.name;\n\n    if (this.type == 'city') {\n      name = name + ` (${this.state.toUpperCase()})`\n    } else if (this.type == 'state') {\n      name = name + ` (${this.country.toUpperCase()})`\n    }\n\n    return name;\n  }\n\n  bringtoCenter() {\n    let polygon_center = this.polygons[0].getCenter();\n    let map_center = window.map.getCenter()\n    let latDiff = polygon_center.lat() - map_center.lat()\n    let lngDiff = polygon_center.lng() - map_center.lng()\n\n    this.polygons.forEach((p) => {\n      p.move(latDiff, lngDiff);\n    });\n  }\n\n  badgeClass() {\n    switch(this.type) {\n      case 'city': return 'info'\n      case 'state': return 'light'\n      case 'country': return 'dark'\n    }\n  }\n\n  static findById(id) {\n    return find(window.allTerritories, t => t.id == id)\n  }\n\n  getURL() {\n    const root = 'https://s3-us-west-2.amazonaws.com/yodap'\n    var url;\n\n    if (this.type == 'country') {\n      url = `${root}/countries/${this.abbrev}.json`\n    } else if (this.type == 'state') {\n      url = `${root}/states/${this.abbrev}.json`\n    } else if (this.type == 'city') {\n      url = `${root}/cities/${this.country}/${this.state}/${this.terse}.json`\n    }\n\n    return url;\n  }\n\n  getCenter() {\n    let polygon = this.polygons[0];\n    return polygon.getCenter();\n  }\n\n  addPolygons() {\n    this.polygons.forEach(p => p.addToMap())\n  }\n\n  fetchPoints() {\n    let url = this.getURL();\n\n    $.getJSON({\n      url: url,\n      success: (resp) => {\n        let coords = gmapifyPolygons(resp.polygons);\n        let polygons = map(coords, c => new Polygon(c, this))\n        this.polygons = polygons;\n        window.mapView.addTerritory(this);\n      },\n      error: (err) => {\n      }\n    });\n  }\n}\n\nexport default Territory;\n","import Polygon from 'models/polygon.js';\n\nclass MapView {\n  constructor() {\n    this.territories = [];\n  }\n\n  resetTerritory(t) {\n    t.reset();\n  }\n\n  bringtoCenter(t) {\n    t.bringtoCenter();\n  }\n\n  gotoTerritory(t) {\n    window.map.setCenter(t.getCenter())\n\n    var zoom;\n    switch (t.type) {\n      case 'city':\n        zoom = 10;\n        break;\n      case 'state':\n        zoom = 5;\n        break;\n      case 'country':\n        zoom = 4;\n        break;\n    }\n\n    window.map.setZoom(zoom)\n  }\n\n  removeTerritory(t) {\n    t.remove()\n  }\n\n  addTerritory(t) {\n    t.addPolygons()\n  }\n}\n\nexport default MapView;\n","import Territory from '../models/territory.js';\nimport flatten from 'lodash/flatten';\n\n// import flatten from '../../node_modules/lodash/flatten.js';\n// import map from '../../node_modules/lodash/map.js';\n\nclass SearchView {\n  constructor() {\n    this.ele = $('#search-hold');\n    this.dropdownMenu = this.ele.find('.dropdown-menu');\n\n    let input = $('#search-input');\n    input.on('input', this.onInput.bind(this));\n    input.on('keydown', this.onKeydown.bind(this));\n    input.on('focus', this.onFocus.bind(this));\n    this.dropdownMenu.on('click', 'a.dropdown-item', this.clickDropdownItem.bind(this))\n\n    $.getJSON({\n      url: 'https://s3-us-west-2.amazonaws.com/yodap/places.json.gz',\n      success: function(places) {\n        window.countries = places.filter(p => p.type == 'country').map(p => new Territory(p));\n        window.states = places.filter(p => p.type == 'state').map(p => new Territory(p));\n        window.cities = places.filter(p => p.type == 'city').map(p => new Territory(p));\n        window.allTerritories = flatten([countries, states, cities]);\n      }.bind(this)\n    })\n\n    $(document).click((event) => {\n      if(!$(event.target).closest('#search-dropdown-hold').length) {\n        this.dropdownMenu.removeClass('show');\n      }\n    });\n  }\n\n  addItem(ele) {\n    ele.classList.add('active')\n    $('#search-input').val('')\n    setTimeout(() => this.closeDropdown(), 5)\n\n    let t = Territory.findById(ele.getAttribute('data-id'))\n    t.fetchPoints();\n    window.territoryView.addTerritory(t)\n  }\n\n  clickDropdownItem(e) {\n    this.dropdownMenu.find('a.active').removeClass('active')\n    this.addItem(e.currentTarget)\n  }\n\n  openDropdown() {\n    this.dropdownMenu.addClass('show')\n  }\n\n  closeDropdown() {\n    this.dropdownMenu.removeClass('show')\n  }\n\n  onFocus(e) {\n    if (e.currentTarget.value.length) {\n      this.openDropdown()\n    }\n  }\n\n  moveSelection(dir) {\n    let active = this.dropdownMenu.find('.active')[0];\n    let children = this.dropdownMenu.children();\n\n    let index = active ? children.index(active) : -1;\n\n    let ele = children[index + dir];\n\n    if (!ele) {\n      ele = dir == -1 ? children.last()[0] : children.first()[0]\n    }\n\n    children.removeClass('active')\n\n    if (ele) {\n      ele.classList.add('active')\n    }\n  }\n\n  hitEnter() {\n    let item;\n    if (item = this.dropdownMenu.find('.active')[0]) {\n      this.addItem(item);\n    }\n  }\n\n  hitEsc() {\n    this.closeDropdown()\n  }\n\n  goUp() { this.moveSelection(-1) }\n  goDown() { this.moveSelection(1) }\n\n  onKeydown(e) {\n    if (e.which == 40) {\n      this.goDown();\n    } else if (e.which == 38) {\n      this.goUp();\n    } else if (e.which == 13) {\n      this.hitEnter()\n    } else if (e.which == 27) {\n      this.hitEsc();\n    }\n  }\n\n  onInput(e) {\n    let val = e.currentTarget.value;\n    let matches = this.findMatches(val);\n\n    if (matches.length) {\n      this.dropdownMenu[0].innerHTML = this.renderDropdownHtml(matches);\n      this.openDropdown()\n    } else {\n      this.closeDropdown()\n    }\n  }\n\n  renderDropdownHtml(matches) {\n    let html = []\n\n    matches.forEach((t) => {\n      html.push(`\n        <a class='dropdown-item' data-id='${t.id}' href='#'>\n          ${t.friendlyName()}\n          <span class=\"badge badge-${t.badgeClass()}\">${t.type}</span>\n        </a>\n      `)\n    })\n\n    return html.join('')\n  }\n\n  findMatches(query) {\n    if (query.length > 2) {\n      query = new RegExp(query.replace(/\\s|\\(|\\)/, ''), \"i\")\n    } else {\n      query = new RegExp('^' + query.replace(/\\s|\\(|\\)/, ''), \"i\")\n    }\n\n    let matches = [];\n\n    ['countries', 'states', 'cities'].some((thing) => {\n      let things = window[thing];\n\n      return things.some((t) => {\n        if (query.test(t.terse)) {\n          matches.push(t)\n        }\n\n        return matches.length >= 20;\n      })\n    })\n\n    return matches;\n  }\n}\n\nexport default SearchView;\n","import Territory from '../models/territory.js';\n// import map from '../../node_modules/lodash/map.js';\n\nclass TerritoryView {\n  constructor() {\n    this.territoryDiv = $('#territory-hold');\n    this.territoryDiv.on('click', 'a.dropdown-item', this.clickTerritory.bind(this))\n  }\n\n  clickTerritory(e) {\n    e.preventDefault();\n\n    let t = $(e.currentTarget);\n    let id = t.closest('.dropdown').attr('data-id');\n    let territory = Territory.findById(id);\n\n    if (t.hasClass('reset')) {\n      window.mapView.resetTerritory(territory);\n    } else if (t.hasClass('goto')) {\n      window.mapView.gotoTerritory(territory);\n    } else if (t.hasClass('bringtocenter')) {\n      window.mapView.bringtoCenter(territory);\n    } else if (t.hasClass('remove')) {\n      let dropdown = this.territoryDiv.find(`div.dropdown[data-id=\"${territory.id}\"]`);\n      dropdown.remove();\n\n      window.mapView.removeTerritory(territory);\n    }\n  }\n\n  addTerritory(t) {\n    let html = this.renderTerritory(t);\n    this.territoryDiv.append(html);\n  }\n\n  renderTerritory(t) {\n    return `\n      <div class=\"dropdown pl-2\" data-id='${t.id}'>\n        <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\">\n          ${t.name}\n        </button>\n        <div class=\"dropdown-menu\">\n          <a class=\"dropdown-item reset\" href=\"#\">Reset</a>\n          <a class=\"dropdown-item goto\" href=\"#\">Go to</a>\n          <a class=\"dropdown-item bringtocenter\" href=\"#\">Bring to center</a>\n          <div class=\"dropdown-divider\"></div>\n          <a class=\"dropdown-item remove\" href=\"#\">Remove</a>\n        </div>\n      </div>`\n  }\n}\n\nexport default TerritoryView;\n"]}